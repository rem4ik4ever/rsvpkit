// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  id          String    @id @default(cuid())
  user        User?     @relation("Session_user", fields: [userId], references: [id])
  userId      String?   @map("user")
  accessToken String    @unique @default("")
  createdAt   DateTime? @default(now())
  userAgent   String    @default("")
  ip          String    @default("")
  updatedAt   DateTime? @updatedAt
  expiresAt   DateTime?

  @@index([userId])
}

model User {
  id               String       @id @default(cuid())
  name             String       @default("")
  email            String       @unique @default("")
  password         String
  sessions         Session[]    @relation("Session_user")
  accounts         Account[]    @relation("Account_user")
  teamMember       TeamMember[] @relation("TeamMember_user")
  currentTeam      Team?        @relation("User_currentTeam", fields: [currentTeamId], references: [id])
  currentTeamId    String?      @map("currentTeam")
  emailConfirmedAt DateTime?
  avatarUrl        String       @default("")
  createdAt        DateTime?    @default(now())
  isAdmin          Boolean      @default(false)

  @@index([currentTeamId])
}

model TeamMember {
  id        String    @id @default(cuid())
  user      User?     @relation("TeamMember_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  team      Team?     @relation("TeamMember_team", fields: [teamId], references: [id])
  teamId    String?   @map("team")
  role      String?
  removedAt DateTime?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@index([userId])
  @@index([teamId])
}

model Team {
  id                    String       @id @default(cuid())
  name                  String       @default("")
  description           String       @default("")
  members               TeamMember[] @relation("TeamMember_team")
  createdAt             DateTime?    @default(now())
  from_User_currentTeam User[]       @relation("User_currentTeam")
}

model Account {
  id                       String    @id @default(cuid())
  user                     User?     @relation("Account_user", fields: [userId], references: [id])
  userId                   String?   @map("user")
  type                     String    @default("")
  provider                 String    @default("")
  providerAccountId        String    @default("")
  refresh_token            String    @default("")
  access_token             String    @default("")
  expires_at               DateTime?
  token_type               String    @default("")
  scope                    String    @default("")
  id_token                 String    @default("")
  session_state            String    @default("")
  refresh_token_expires_at DateTime?

  @@index([userId])
}
